name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
      - run: npm ci

      - run: npm run lint:prettier

      - run: npm run lint:eslint:report
      - name: Annotate ESLint results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: ".eslint-report.json"

      - run: npm run codegen
      - run: npm run prisma:client
      - run: npm run lint:schema

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
      - run: npm ci
      - run: npm run codegen
      - run: npm run prisma:client
      - run: npm run typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TEST_PRISMA_DATABASE_URL: postgres://user:pass@localhost:5432/test
      TEST_NEO4J_URL: bolt://localhost:7687
      TEST_NEO4J_USERNAME: neo4j
      TEST_NEO4J_PASSWORD: password
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: test
      neo4j:
        image: neo4j:5.4
        ports:
          - 7687:7687
        env:
          NEO4J_AUTH: neo4j/password
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: npm
      - run: npm ci
      - run: npm run codegen
      - run: npm run prisma:client
      - run: npm run test:migration
      - run: npm run test
