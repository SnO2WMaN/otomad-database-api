scalar DateTime

directive @auth(scopes: [String!], optional: Boolean = false) on FIELD_DEFINITION

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum SortOrder {
  ASC
  DESC
}

"VideoのIDとして無効なIDを入力した場合のエラー"
type MutationInvalidVideoIdError {
  "無効なID"
  videoId: String!
}

"Videoが見つからない場合のエラー"
type MutationVideoNotFoundError {
  videoId: String!
}

"TagのIDとして無効なIDを入力した場合のエラー"
type MutationInvalidTagIdError {
  "無効なID"
  tagId: String!
}

"Tagが見つからない場合のエラー"
type MutationTagNotFoundError {
  tagId: String!
}

"MylistのIDとして無効なIDを入力した場合のエラー"
type MutationInvalidMylistIdError {
  "無効なID"
  mylistId: String!
}

"Mylistが見つからない場合のエラー"
type MutationMylistNotFoundError {
  mylistId: String!
}

"Mylistの所有者が違う場合のエラー"
type MutationWrongMylistHolderError {
  mylistId: String!
}

"NicovideoRegistrationRequestのIDとして無効なIDを入力した場合のエラー"
type MutationInvalidNicovideoRegistrationRequestIdError {
  "無効なID"
  requestId: String!
}

"NicovideoRegistrationRequestが見つからない場合のエラー"
type MutationNicovideoRegistrationRequestNotFoundError {
  requestId: String!
}

"既にチェック済みのNicovideoRegistrationRequestをチェックしようとした場合のエラー"
type MutationNicovideoRegistrationRequestAlreadyCheckedError {
  requestId: String!
}

"YoutubeRegistrationRequestのIDとして無効なIDを入力した場合のエラー"
type MutationInvalidYoutubeRegistrationRequestIdError {
  "無効なID"
  requestId: String!
}

"YoutubeRegistrationRequestが見つからない場合のエラー"
type MutationYoutubeRegistrationRequestNotFoundError {
  requestId: String!
}

"既にチェック済みのYoutubeRegistrationRequestをチェックしようとした場合のエラー"
type MutationYoutubeRegistrationRequestAlreadyCheckedError {
  requestId: String!
}

enum FetchExternalSourceThumbnailScale {
  "960 x 700"
  LARGE

  "720 x 400"
  OGP
}
