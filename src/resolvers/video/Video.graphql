type Video implements Node {
  id: ID!
  title: String!
  titles: [VideoTitle!]!
  thumbnailUrl: String!
  thumbnails: [VideoThumbnail!]!
  tags: [Tag!]!
  hasTag(id: ID!): Boolean!
  history(input: VideoHistoryInput!): VideoHistoryCollection!
  registeredAt: DateTime!
  similarVideos(input: VideoSimilarVideosInput!): VideoSimilarVideosPayload!

  nicovideoSources: [NicovideoVideoSource!]!
}

type VideoTitle {
  title: String!
  primary: Boolean!
}

type VideoThumbnail {
  imageUrl: String!
  primary: Boolean!
}

input VideoHistoryInput {
  skip: Int! = 0
  limit: Int! = 10
  order: VideoHistoryOrder! = { createdAt: DESC }
}

input VideoHistoryOrder {
  createdAt: SortOrder
}

type VideoHistoryCollection {
  nodes: [VideoHistoryItem!]!
}

interface VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
}

type VideoRegisterHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
}

type VideoAddTitleHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  title: String!
}

type VideoDeleteTitleHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  title: String!
}

type VideoChangePrimaryTitleHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  from: String
  to: String!
}

type VideoAddThumbnailHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  thumbnail: String!
}

type VideoDeleteThumbnailHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  thumbnail: String!
}

type VideoChangePrimaryThumbnailHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  from: String
  to: String!
}

type VideoAddTagHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  tag: Tag!
}

type VideoDeleteTagHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!
  tag: Tag!
}

type VideoAddNicovideoVideoSourceHistoryItem implements VideoHistoryItem {
  id: ID!
  user: User!
  createdAt: DateTime!
  video: Video!

  source: NicovideoVideoSource!
}

input VideoSimilarVideosInput {
  limit: Int! = 10
}

type VideoSimilarVideosPayload {
  items: [VideoSimilarVideoItem!]!
}

type VideoSimilarVideoItem {
  video: Video!
  score: Float!
}

type VideoCollection {
  nodes: [Video!]!
}
