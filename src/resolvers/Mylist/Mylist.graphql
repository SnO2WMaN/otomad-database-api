type Mylist implements Node {
  id: ID!

  title: String!
  slug: String!

  holder: User!
  isLikeList: Boolean!
  range: MylistShareRange!
  createdAt: DateTime!
  updatedAt: DateTime!

  """
  マイリストの中にビデオが追加されているか．
  """
  isIncludesVideo(id: ID!): Boolean!

  recommendedVideos(input: MylistRecommendedVideosInput!): MylistRecommendedVideosPayload!

  includeTags(input: MylistIncludeTagsInput!): MylistIncludeTagsPayload!

  """
  登録された音MADをoffsetベースで取得する
  """
  registrationsByOffset(input: MylistRegistrationsByOffsetInput!): MylistRegistrationsByOffsetPayload!
}

input MylistRegistrationsByOffsetInput {
  offset: Int!
  take: Int!
  orderBy: MylistRegistrationsOrderBy! = { createdAt: DESC }
}

type MylistRegistrationsByOffsetPayload {
  nodes: [MylistRegistration!]!
  hasMore: Boolean!
  totalCount: Int!
}

enum MylistShareRange {
  PUBLIC
  KNOW_LINK
  PRIVATE
}

input MylistRecommendedVideosInput {
  limit: Int! = 10
}

type MylistRecommendedVideosPayload {
  items: [MylistVideoRecommendation!]!
}

input MylistIncludeTagsInput {
  limit: Int! = 10
  skip: Int! = 0
  order: MylistIncludeTagsInputOrder! = { count: DESC }
}

input MylistIncludeTagsInputOrder {
  count: SortOrder!
}

type MylistIncludeTagsPayload {
  items: [MylistTagInclusion!]!
}
