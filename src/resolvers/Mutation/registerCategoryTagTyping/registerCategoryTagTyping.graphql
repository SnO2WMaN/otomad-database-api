type Mutation {
  registerCategoryTagTyping(input: RegisterCategoryTagTypingInput!): RegisterCategoryTagTypingResultUnion!
    @auth(scopes: ["create:tag_type"])
}

input RegisterCategoryTagTypingInput {
  tagId: ID!
  type: TagType!
}

union RegisterCategoryTagTypingResultUnion =
    MutationInvalidTagIdError
  | MutationTagNotFoundError
  | RegisterCategoryTagTypingUnsupportedTagType
  | RegisterCategoryTagTypingAlreadyTypeExistsError
  | RegisterCategoryTagTypingNotCategoryTagError
  | RegisterCategoryTagTypingAlreadyTypedError
  | RegisterCategoryTagTypingSucceededPayload

type RegisterCategoryTagTypingUnsupportedTagType {
  type: TagType!
}

"指定されたタイプのカテゴリータグが既に存在する場合のエラー"
type RegisterCategoryTagTypingAlreadyTypeExistsError {
  already: Tag!
}

"指定されたタグはカテゴリータグでは無い場合のエラー"
type RegisterCategoryTagTypingNotCategoryTagError {
  tag: Tag!
}

"指定されたカテゴリータグに既にタイプがある場合のエラー"
type RegisterCategoryTagTypingAlreadyTypedError {
  tag: Tag!
}

type RegisterCategoryTagTypingSucceededPayload {
  tag: Tag!
}
