type Mutation {
  rejectNicovideoRegistrationRequest(
    input: RejectNicovideoRegistrationRequestInput!
  ): RejectNicovideoRegistrationRequestReturnUnion! @auth(scopes: ["check:registration_request"])
}

input RejectNicovideoRegistrationRequestInput {
  requestId: ID!
  note: String!
}

union RejectNicovideoRegistrationRequestReturnUnion =
    MutationNicovideoRegistrationRequestNotFoundError
  | MutationInvalidNicovideoRegistrationRequestIdError
  | RejectNicovideoRegistrationRequestRequestAlreadyCheckedError
  | RejectNicovideoRegistrationRequestSucceededPayload

"リクエストが既に処理されている場合のエラー"
type RejectNicovideoRegistrationRequestRequestAlreadyCheckedError {
  request: NicovideoRegistrationRequest!
}

type RejectNicovideoRegistrationRequestSucceededPayload {
  rejecting: NicovideoRegistrationRequestRejecting!
}
