type Mutation {
  registerTag(input: RegisterTagInput!): RegisterTagPayload!
}

input RegisterTagInput {
  primaryName: String!
  extraNames: [String!]! = []

  explicitParent: ID
  implicitParents: [ID!]! = []

  meaningless: Boolean! = false

  resolveSemitags: [ID!]! = []
}

union RegisterTagPayload = RegisterTagSuccessedPayload | RegisterTagFailedPayload

type RegisterTagSuccessedPayload {
  tag: Tag!
}

type RegisterTagFailedPayload {
  message: RegisterTagFailedMessage!
}

enum RegisterTagFailedMessage {
  FORBIDDEN

  INVALID_TAG_ID

  UNKNOWN
}
