type Mutation {
  resovleSemitag(semitagId: ID!, tagId: ID!): ResolveSemitagReturnUnion! @auth(permissions: ["check:semitag"])
}

union ResolveSemitagReturnUnion =
    MutationAuthenticationError
  | MutationInvalidTagIdError
  | MutationTagNotFoundError
  | MutationInvalidSemitagIdError
  | MutationSemitagNotFoundError
  | MutationSemitagAlreadyCheckedError
  | ResolveSemitagOtherErrorsFallback
  | ResolveSemitagVideoAlreadyTaggedPayload
  | ResolveSemitagSucceededPayload

type ResolveSemitagSucceededPayload {
  resolving: SemitagResolving!
}

"すでに動画に同じタグ付けが行われている場合のエラー"
type ResolveSemitagVideoAlreadyTaggedPayload {
  tagging: VideoTag!
}

"その他のエラー"
type ResolveSemitagOtherErrorsFallback {
  message: ResolveSemitagOtherErrorsFallbackMessage!
}

enum ResolveSemitagOtherErrorsFallbackMessage {
  INTERNAL_SERVER_ERROR
}
